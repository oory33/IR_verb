knitr::opts_chunk$set(echo = TRUE)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
po <- read_excel("pokemon.xlsx")
po151 <- data.frame(po[1:151, 3:8], row.names=po$ポケモン名[1:151])
pok <- hclust(dist(po151))
```{r]
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
```
```{r}
```{r]
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
```
```{r]
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
```
```{r]
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
```
```{r}
```{r]
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
```
```{r]
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
```
res <- kmeans(po151$)
res <- kmeans(po151$攻撃,po151$防御, type="n")
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
library(readxl)
po <- read_excel("pokemon.xlsx")
po151 <- data.frame(po[1:151, 3:8], row.names=po$ポケモン名[1:151])
pok <- hclust(dist(po151))
plot(pok)
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50))
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50), c(rep("v", 50)
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50), c(rep("c", 50)), c(rep("v", 50)))
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50)), c(rep("c", 50)), c(rep("v", 50)))
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s",50)), c(rep("c", 50)), c(rep("v", 50)))
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s", 50)), c(rep("c", 50)), c(rep("v", 50)))
knitr::opts_chunk$set(echo = TRUE)
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s", 50)), c(rep("c", 50)), c(rep("v", 50)))
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep(s, 50)), c(rep(c, 50)), c(rep(v, 50)))
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s", 50)), c(rep(c, 50)), c(rep(v, 50)))
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s", 50)), c(rep("c", 50)), c(rep("v", 50)))
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
0
res <- kmeans(iris[, 1:4], 3, iter.max=1000)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
res <- kmeans(po151, 3)
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, c(rep("s", 50)), c(rep("c", 50)), c(rep("v", 50)))
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$cluster)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, col=iris$Species)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(iris))
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(c(rep("s",50)),c(rep("s",50)),c(rep("p",50)),c(rep("v",50))))
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(c(rep("s",50)),c(rep("p",50)),c(rep("v",50))))
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width), col=result$cluster)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, col=result$cluster)
res <- kmeans(po151, 3)
plot(po151$攻撃, po151$防御, type="n")
text(po151$攻撃, po151$防御, row.names(po151), col=res$cluster, cex=0.5)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(iris), col=result$cluster)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(iris$Species), col=result$cluster)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(iris$Species), col=result$cluster)
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(iris), col=result$cluster)
library(readxl)
po <- read_excel("pokemon.xlsx")
po151 <- data.frame(po[1:151, 3:8], row.names=po$ポケモン名[1:151])
pok <- hclust(dist(po151))
plot(pok)
knitr::opts_chunk$set(echo = TRUE)
height <- c(177, 173, 157, 180, 154, 158, 169, 174, 175, 168)
shoe <- c(29, 26.5, 23.5, 26, 23.5, 23.5, 26.5, 27, 26, 25.5)
person <- c("oi", "jenipher", "kotone", "sano", "meg", "chaco", "maro", "kimidori", "yi", "masuda")
dat <- data.frame(height, shoe, row.names=person)
dat
result <- kmeans(iris[, 1:4], 3, iter.max=1000)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, type="n")
text(iris$Sepal.Length, iris$Sepal.Width, row.names(iris), col=result$cluster)
dat <- data.frame(scale(height), scale(shoe), row.names=person)
res <- hclust(dist(dat))
plot(res, hang=-1)
?plot.function
knitr::opts_chunk$set(echo = TRUE)
num <- 0
for (k in 1:10000){
g1 <- rnorm(n=10,mean=0.0, sd=1.0)
g2 <- rnorm(n=10,mean=0.5, sd=1.0)
res <- t.test(g1,g2,paired=FALSE,var.eqial=TRUE)
if(res$value<0.05,){
num <- 0
for (k in 1:10000){
g1 <- rnorm(n=10,mean=0.0, sd=1.0)
g2 <- rnorm(n=10,mean=0.5, sd=1.0)
res <- t.test(g1, g2, paired=FALSE, var.equal=TRUE)
if(res$value<0.05,){
num <- 0
for (k in 1:10000){
g1 <- rnorm(n=10,mean=0.0, sd=1.0)
g2 <- rnorm(n=10,mean=0.5, sd=1.0)
res <- t.test(g1, g2, paired=FALSE, var.equal=TRUE)
if(res$value<0.05){
num <- num + 1
}
}
num <- 0
for (k in 1:10000){
g1 <- rnorm(n=10,mean=0.0, sd=1.0)
g2 <- rnorm(n=10,mean=0.5, sd=1.0)
res <- t.test(g1, g2, paired=FALSE, var.equal=TRUE)
if(res$p.value<0.05){
num <- num + 1
}
}
curry.beef    <- c(9, 8.5, 6, 6, 7,  8, 8)
curry.chicken <- c(5, 6.5, 4, 5, 3, 10, 9)
t.test(curry.beef, curry.chicken)
mb <- mean(curry.beef)
mc <- mean(curry.chicken)
s <- sd(c(curry.beef, curry.chicken))
power.t.test(power=0.8, sd=s, sig.level=0.05)
curry.beef    <- c(9, 8.5, 6, 6, 7,  8, 8)
curry.chicken <- c(5, 6.5, 4, 5, 3, 10, 9)
t.test(curry.beef, curry.chicken)
mb <- mean(curry.beef)
mc <- mean(curry.chicken)
s <- sd(c(curry.beef, curry.chicken))
power.t.test(power=0.8, delta=10-0,  sd=s, sig.level=0.05)
curry.beef    <- c(9, 8.5, 6, 6, 7,  8, 8)
curry.chicken <- c(5, 6.5, 4, 5, 3, 10, 9)
t.test(curry.beef, curry.chicken)
mb <- mean(curry.beef)
mc <- mean(curry.chicken)
s <- sd(c(curry.beef, curry.chicken))
power.t.test(power=0.8, delta=10-3,  sd=s, sig.level=0.05)
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
curry.beef    <- c(9, 8.5, 6, 6, 7,  8, 8)
curry.chicken <- c(5, 6.5, 4, 5, 3, 10, 9)
t.test(curry.beef, curry.chicken)
mb <- mean(curry.beef)
mc <- mean(curry.chicken)
s <- sd(c(curry.beef, curry.chicken))
power.t.test(power=0.8, delta=mb-md22222222222c,  sd=s, sig.level=0.05)
curry.beef    <- c(9, 8.5, 6, 6, 7,  8, 8)
curry.chicken <- c(5, 6.5, 4, 5, 3, 10, 9)
t.test(curry.beef, curry.chicken)
mb <- mean(curry.beef)
mc <- mean(curry.chicken)
s <- sd(c(curry.beef, curry.chicken))
power.t.test(power=0.8, delta=mb-md,  sd=s, sig.level=0.05)
jsondat <- fromJSON("/Users/ryo/Desktop/cores/analyze/result/sano31_5.json")
source('~/Desktop/my/IR_verb/IRverb.R')
sample.data
